class Solution {
public:
    void fn(unordered_map<char,string>&m)
    {  
        m['2']="abc";
        m['3']="def";
        m['4']="ghi";
        m['5']="jkl";
        m['6']="mno";
        m['7']="pqrs";
        m['8']="tuv";
        m['9']="wxyz";
    }
    void fun(int idx,string&digits,string &s,vector<string>&res,unordered_map<char,string>&m)
    {  if(idx==digits.size())
        {  res.push_back(s);
           return;
        }
       for(int i=0;i<m[digits[idx]].size();++i)
       {  s.push_back(m[digits[idx]][i]);
          fun(idx+1,digits,s,res,m);
          s.pop_back();
       }
    }
    vector<string> letterCombinations(string &digits) {
        string s;
        vector<string>res;
        if(digits.size()==0)
            return res;
        unordered_map<char,string>m ;
        fn(m);
        fun(0,digits,s,res,m);
        return res;
    }
};
